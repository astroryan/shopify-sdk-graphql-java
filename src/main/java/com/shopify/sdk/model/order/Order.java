package com.shopify.sdk.model.order;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.shopify.sdk.model.common.DateTime;
import com.shopify.sdk.model.common.ID;
import com.shopify.sdk.model.customer.CustomerAddress;
import com.shopify.sdk.graphql.scalar.MoneyScalar;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

/**
 * An order is a customer's completed request to purchase one or more products from a shop.
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Order {
    
    /**
     * A globally-unique identifier.
     */
    @JsonProperty("id")
    private ID id;
    
    /**
     * The reason for the order's cancellation.
     */
    @JsonProperty("cancelReason")
    private OrderCancelReason cancelReason;
    
    /**
     * The date and time when the order was cancelled.
     */
    @JsonProperty("cancelledAt")
    private DateTime cancelledAt;
    
    /**
     * Whether the order is confirmed.
     */
    @JsonProperty("confirmed")
    private Boolean confirmed;
    
    /**
     * The date and time when the order was created.
     */
    @JsonProperty("createdAt")
    private DateTime createdAt;
    
    /**
     * The three-letter code (ISO 4217 format) for the shop currency.
     */
    @JsonProperty("currencyCode")
    private String currencyCode;
    
    /**
     * The locale code in which this specific order happened.
     */
    @JsonProperty("currentSubtotalPrice")
    private MoneyScalar currentSubtotalPrice;
    
    /**
     * The total cost of taxes for the order.
     */
    @JsonProperty("currentTotalTax")
    private MoneyScalar currentTotalTax;
    
    /**
     * The customer's email address.
     */
    @JsonProperty("email")
    private String email;
    
    /**
     * The financial status of the order.
     */
    @JsonProperty("financialStatus")
    private OrderFinancialStatus financialStatus;
    
    /**
     * The fulfillment status for the order.
     */
    @JsonProperty("fulfillmentStatus")
    private OrderFulfillmentStatus fulfillmentStatus;
    
    /**
     * The name of the order, generated by combining the order_number property with the order_number_prefix and order_number_suffix properties.
     */
    @JsonProperty("name")
    private String name;
    
    /**
     * A unique numeric identifier for the order for use by shop owners and customer service.
     */
    @JsonProperty("orderNumber")
    private Integer orderNumber;
    
    /**
     * The phone number associated with the order.
     */
    @JsonProperty("phone")
    private String phone;
    
    /**
     * The date and time when the order was imported.
     */
    @JsonProperty("processedAt")
    private DateTime processedAt;
    
    /**
     * The billing address to where the order will be charged.
     */
    @JsonProperty("billingAddress")
    private CustomerAddress billingAddress;
    
    /**
     * The mailing address to where the order will be shipped.
     */
    @JsonProperty("shippingAddress")
    private CustomerAddress shippingAddress;
    
    /**
     * The date and time when the order was last modified.
     */
    @JsonProperty("updatedAt")
    private DateTime updatedAt;
    
    /**
     * Whether the order is a test order.
     */
    @JsonProperty("test")
    private Boolean test;
    
    /**
     * List of the order's line items.
     */
    @JsonProperty("lineItems")
    private OrderLineItemConnection lineItems;
    
    /**
     * A list of the order's shipping lines.
     */
    @JsonProperty("shippingLines")
    private List<ShippingLine> shippingLines;
    
    /**
     * A list of the order's tax lines.
     */
    @JsonProperty("taxLines")
    private List<TaxLine> taxLines;
    
    /**
     * Whether or not the order can be cancelled.
     */
    @JsonProperty("canMarkAsPaid")
    private Boolean canMarkAsPaid;
    
    /**
     * Whether or not the order can be cancelled.
     */
    @JsonProperty("canNotifyCustomer")
    private Boolean canNotifyCustomer;
    
    /**
     * The total price of the order.
     */
    @JsonProperty("totalPrice")
    private MoneyScalar totalPrice;
    
    /**
     * The subtotal price of the order.
     */
    @JsonProperty("subtotalPrice")
    private MoneyScalar subtotalPrice;
    
    /**
     * The total cost of shipping for the order.
     */
    @JsonProperty("totalShippingPrice")
    private MoneyScalar totalShippingPrice;
    
    /**
     * The sum of all the taxes applied to the order.
     */
    @JsonProperty("totalTax")
    private MoneyScalar totalTax;
}