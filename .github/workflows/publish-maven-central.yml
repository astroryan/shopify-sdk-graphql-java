name: Publish to Maven Central

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.1.1)'
        required: true
        type: string
      release_type:
        description: 'Release type'
        required: true
        type: choice
        options:
          - release
          - snapshot
        default: release

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Setup GPG
      run: |
        echo "GPG signing will be handled by the vanniktech plugin using in-memory keys"
        
    - name: Update version
      if: github.event.inputs.release_type == 'release'
      run: |
        sed -i "s/version = '.*'/version = '${{ github.event.inputs.version }}'/" build.gradle
        
    - name: Update SNAPSHOT version
      if: github.event.inputs.release_type == 'snapshot'
      run: |
        sed -i "s/version = '.*'/version = '${{ github.event.inputs.version }}-SNAPSHOT'/" build.gradle
        
    - name: Run tests
      run: ./gradlew clean test
      
    - name: Debug credentials
      env:
        MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
      run: |
        echo "Maven Central username length: ${#MAVEN_CENTRAL_USERNAME}"
        echo "GPG Key ID: ${{ secrets.GPG_KEY_ID }}"
        
    - name: Test Maven Central Portal authentication
      env:
        MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
        MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
      run: |
        echo "Testing Maven Central Portal authentication..."
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
          -X GET \
          -u "${MAVEN_CENTRAL_USERNAME}:${MAVEN_CENTRAL_PASSWORD}" \
          https://central.sonatype.com/api/v1/publisher/deployments)
        echo "Maven Central Portal auth response: $RESPONSE"
        if [ "$RESPONSE" != "200" ]; then
          echo "⚠️ Maven Central Portal authentication failed. Please check your credentials."
          echo "Make sure you're using User Token credentials from central.sonatype.com"
        fi
        
    - name: Build and publish to Maven Central
      env:
        # Maven Central credentials
        ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
        ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
        # GPG signing credentials - vanniktech plugin format
        ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_PRIVATE_KEY }}
        ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_KEY_ID }}
        ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        # Debug: Check if environment variables are set
        echo "Checking environment variables..."
        echo "Maven Central Username set: $([ -n "$ORG_GRADLE_PROJECT_mavenCentralUsername" ] && echo "YES" || echo "NO")"
        echo "Maven Central Password set: $([ -n "$ORG_GRADLE_PROJECT_mavenCentralPassword" ] && echo "YES" || echo "NO")"
        echo "Signing Key set: $([ -n "$ORG_GRADLE_PROJECT_signingInMemoryKey" ] && echo "YES" || echo "NO")"
        echo "Signing Key ID set: $([ -n "$ORG_GRADLE_PROJECT_signingInMemoryKeyId" ] && echo "YES" || echo "NO")"
        echo "Signing Password set: $([ -n "$ORG_GRADLE_PROJECT_signingInMemoryKeyPassword" ] && echo "YES" || echo "NO")"
        
        # Show first few characters of the key to verify format
        if [ -n "$ORG_GRADLE_PROJECT_signingInMemoryKey" ]; then
          echo "Key starts with: $(echo "$ORG_GRADLE_PROJECT_signingInMemoryKey" | head -c 50)..."
        fi
        
        # First publish and sign locally to verify
        ./gradlew publishToMavenLocal \
          --no-configuration-cache \
          --info
        
        # Check if signing worked
        echo "Checking for signed artifacts in local repository..."
        ls -la ~/.m2/repository/io/github/astroryan/shopify-spring-sdk/*/
        
        # If signing worked locally, publish to Maven Central (staging)
        ./gradlew publishToMavenCentral \
          --no-configuration-cache \
          --info --stacktrace
          
        echo "✅ Published to Maven Central staging repository"
        echo "Please visit https://central.sonatype.com/ to verify and release the deployment"
          
    - name: Create Release Notes
      if: github.event.inputs.release_type == 'release'
      run: |
        echo "## Shopify Spring SDK v${{ github.event.inputs.version }}" > release_notes.md
        echo "" >> release_notes.md
        echo "### Maven Central" >> release_notes.md
        echo '```xml' >> release_notes.md
        echo '<dependency>' >> release_notes.md
        echo '    <groupId>io.github.astroryan</groupId>' >> release_notes.md
        echo '    <artifactId>shopify-spring-sdk</artifactId>' >> release_notes.md
        echo '    <version>${{ github.event.inputs.version }}</version>' >> release_notes.md
        echo '</dependency>' >> release_notes.md
        echo '```' >> release_notes.md
        echo "" >> release_notes.md
        echo "### Gradle" >> release_notes.md
        echo '```gradle' >> release_notes.md
        echo 'implementation "io.github.astroryan:shopify-spring-sdk:${{ github.event.inputs.version }}"' >> release_notes.md
        echo '```' >> release_notes.md
        
    - name: Summary
      run: |
        echo "## 🚀 Maven Central Deployment" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.release_type }}" = "release" ]; then
          echo "✅ Published Release: v${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "📦 [Maven Central](https://central.sonatype.com/artifact/io.github.astroryan/shopify-spring-sdk/${{ github.event.inputs.version }})" >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ Published Snapshot: v${{ github.event.inputs.version }}-SNAPSHOT" >> $GITHUB_STEP_SUMMARY
          echo "📦 [Maven Central Portal](https://central.sonatype.com/namespace/io.github.astroryan)" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "⏳ Note: Artifacts may take up to 30 minutes to appear in Maven Central" >> $GITHUB_STEP_SUMMARY