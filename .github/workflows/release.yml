name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.1.1)'
        required: true
        type: string
      previous_version:
        description: 'Previous version for changelog (e.g., 1.1.0)'
        required: false
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false
      target_branch:
        description: 'Target branch for release'
        required: false
        type: choice
        options:
          - release
          - main
        default: release

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for changelog generation
        
    - name: Validate inputs
      run: |
        if [[ ! "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "❌ Invalid version format. Use semantic versioning (e.g., 1.2.3)"
          exit 1
        fi
        
        if git rev-parse "v${{ github.event.inputs.version }}" >/dev/null 2>&1; then
          echo "❌ Version v${{ github.event.inputs.version }} already exists"
          exit 1
        fi
        
        echo "✅ Version validation passed"
        
    - name: Update version in build.gradle
      run: |
        sed -i "s/version = '.*'/version = '${{ github.event.inputs.version }}'/" build.gradle
        echo "📝 Updated version to ${{ github.event.inputs.version }}"
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Run tests and build
      run: |
        echo "🧪 Running tests..."
        ./gradlew clean test
        
        echo "🏗️ Building project..."
        ./gradlew build
        
        echo "✅ Build completed successfully"
        
    - name: Generate release notes
      run: |
        chmod +x .github/scripts/generate-release-notes.sh
        
        if [ -n "${{ github.event.inputs.previous_version }}" ]; then
          .github/scripts/generate-release-notes.sh \
            "${{ github.event.inputs.version }}" \
            "${{ github.event.inputs.previous_version }}"
        else
          .github/scripts/generate-release-notes.sh "${{ github.event.inputs.version }}"
        fi
        
        echo "📄 Release notes generated"
        
    - name: Commit version update
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        git add build.gradle
        git commit -m "🔖 Bump version to ${{ github.event.inputs.version }}"
        git push origin ${{ github.event.inputs.target_branch }}
        
    - name: Create git tag
      run: |
        git tag v${{ github.event.inputs.version }}
        git push origin v${{ github.event.inputs.version }}
        echo "🏷️ Created tag v${{ github.event.inputs.version }}"
        
    - name: Publish to GitHub Packages
      run: ./gradlew publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create GitHub Release
      run: |
        PRERELEASE_FLAG=""
        if [ "${{ github.event.inputs.prerelease }}" = "true" ]; then
          PRERELEASE_FLAG="--prerelease"
        fi
        
        gh release create v${{ github.event.inputs.version }} \
          --title "Shopify Spring SDK v${{ github.event.inputs.version }}" \
          --notes-file release_notes.md \
          --target ${{ github.event.inputs.target_branch }} \
          $PRERELEASE_FLAG \
          --verify-tag
          
        echo "🚀 GitHub release created: v${{ github.event.inputs.version }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update CHANGELOG.md
      run: |
        # Create temporary changelog entry
        cat > temp_changelog.md << EOF
        ## [v${{ github.event.inputs.version }}] - $(date +%Y-%m-%d)
        
        ### Release Highlights
        - Production release v${{ github.event.inputs.version }}
        - All features tested and verified
        - Compatible with Shopify Admin API 2025-07
        
        EOF
        
        # Prepend to existing changelog
        if [ -f CHANGELOG.md ]; then
          echo "" >> temp_changelog.md
          cat CHANGELOG.md >> temp_changelog.md
          mv temp_changelog.md CHANGELOG.md
        else
          mv temp_changelog.md CHANGELOG.md
        fi
        
        # Commit changelog update
        git add CHANGELOG.md
        git commit -m "📝 Update CHANGELOG for v${{ github.event.inputs.version }}"
        git push origin ${{ github.event.inputs.target_branch }}
        
        echo "📝 CHANGELOG.md updated"
        
    - name: Summary
      run: |
        echo "## 🎉 Release Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Version**: v${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Target Branch**: ${{ github.event.inputs.target_branch }}" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Prerelease**: ${{ github.event.inputs.prerelease }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
        echo "- 🏷️ [GitHub Release](https://github.com/${{ github.repository }}/releases/tag/v${{ github.event.inputs.version }})" >> $GITHUB_STEP_SUMMARY
        echo "- 📦 [GitHub Packages](https://github.com/${{ github.repository }}/packages)" >> $GITHUB_STEP_SUMMARY
        echo "- 📝 [Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Installation" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`gradle" >> $GITHUB_STEP_SUMMARY
        echo "dependencies {" >> $GITHUB_STEP_SUMMARY
        echo "    implementation 'com.shopify:shopify-spring-sdk:${{ github.event.inputs.version }}'" >> $GITHUB_STEP_SUMMARY
        echo "}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY